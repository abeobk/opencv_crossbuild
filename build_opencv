#!/bin/bash

#Cloing opencv if not
if [[ ! -d "opencv" ]]; then
	git clone https://github.com/opencv/opencv.git
else
	rm -rf opencv/build_armhf
fi

cd opencv

if [[ $1 == "armhf" ]]; then
	ARCH="armhf"
	TOOLCHAIN="arm-gnueabi"
	NEON="ON"
	VFPV3="ON"
	FP16="OFF"
elif [[ $1 == "armel" ]]; then
	ARCH="armhf"
	TOOLCHAIN="arm-gnueabi"
	NEON="OFF"
	VFPV3="OFF"
	FP16="OFF"
elif [[ $1 == "aarch64" || $1 == "arm64" ]]; then
	ARCH="arm64"
	TOOLCHAIN="aarch64-gnu"
	NEON="ON"
	VFPV3="OFF"
	FP16="ON"
else
	echo "ERROR: Invalid arch. (Supported arch: armhf/arm64/aarch64)"
	exit -1
fi

CPU_CNT=`grep -c ^processor /proc/cpuinfo`
echo "CPU(s): $CPU_CNT"

BUILD_DIR="./build_$ARCH"
INSTALL_DIR="$HOME/dev/$ARCH/opencv"

#create build & install
mkdir $BUILD_DIR 
mkdir -p $INSTALL_DIR 
cd $BUILD_DIR

cmake .. \
-DCMAKE_BUILD_TYPE=RELEASE \
-DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
-DCMAKE_TOOLCHAIN_FILE=../platforms/linux/$TOOLCHAIN.toolchain.cmake \
-DINSTALL_C_EXAMPLES=OFF \
-DINSTALL_PYTHON_EXAMPLES=OFF \
-DWITH_PTHREADS_PF=ON \
-DWITH_V4L=ON \
-DWITH_QT=OFF \
-DWITH_OPENGL=OFF \
-DWITH_TIFF=OFF \
-DWITH_WEBP=OFF \
-DWITH_OPENEXR=OFF \
-DWITH_JASPER=OFF \
-DWITH_GSTREAMER=OFF \
-DWITH_MSMF=OFF \
-DWITH_DSHOW=OFF \
-DWITH_AVFOUNDATION=OFF \
-DWITH_1394=OFF \
-DWITH_ANDROID_MEDIANDK=OFF \
-DWITH_GTK=OFF \
-DWITH_WIN32UI=OFF \
-DWITH_PROTOBUF=ON \
-DBUILD_PROTOBUF=ON \
-DWITH_DNN_OPENCL=ON \
-DENABLE_NEON=$NEON \
-DENABLE_VFPV3=$VFPV3 \
-DENABLE_FP16=$FP16 \
-DBUILD_EXAMPLES=OFF \
-DBUILD_TESTS=OFF \
-DBUILD_PYTHON=OFF \
-DBUILD_opencv_apps=OFF \
-DBUILD_LIST=core,videoio,imgproc,imgcodecs,calib3d,ml,video,dnn \
-DBUILD_JAVA=OFF \
-DBUILD_FAT_JAVA_LIB=OFF \
-DBUILD_opencv_python2=OFF \
-DBUILD_opencv_python3=OFF

echo "Press <ENTER> to continue..."
read

make -j$CPU_CNT
make install
